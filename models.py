from pydantic import BaseModel
from typing import Optional

class TorrentStats(BaseModel):
    infohash: str
    state: str
    paused: bool
    auto_managed: bool
    sequential_download: bool
    is_seeding: bool
    is_finished: bool
    has_metadata: bool
    progress: float
    error: str
    download_rate: float
    upload_rate: float
    total_download: int
    total_upload: int
    num_peers: int
    list_peers: int
    list_seeds: int
    connect_candidates: int
    num_pieces: int
    total_pieces: int 
    total_done: int
    total_wanted_done: int
    total_wanted: int
    distributed_copies: float
    num_seeds: int
    num_complete: int
    num_incomplete: int
    last_seen_complete: int
    time_since_upload: int
    time_since_download: int
    active_time: int
    finished_time: int
    seeding_time: int
    seed_rank: int
    last_scrape: int
    has_incoming: bool
    seed_mode: bool
    upload_mode: bool
    share_mode: bool
    super_seeding: bool
    priority: int
    added_time: int
    completed_time: int
    storage_mode: str
    save_path: str
    name: str
    total_size: int
    num_files: int
    creation_date: int
    creator: str
    comment: str
    piece_length: int
    num_pieces: int
    files: list